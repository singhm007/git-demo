references :

https://marklodato.github.io/visual-git-guide/index-en.html
https://git-scm.com/book/en/v2

https://freenode.net (#git or #github channel)

https://www.youtube.com/watch?v=FyAAIHHClqI - David Mahler youtube video

*************************************************************************************
=> Git stores changes as Snapshots, Not Differences
=> Nearly Every Operation Is Local
=> The mechanism that Git uses for this checksumming is called a SHA-1 hash
=> Git has three main states that your files can reside in: 
	modified(Working area) ,staged(indexed), and committed(history):




*****I*****************************************************************************
git help <verb> => git help config
git <verb> --help => git config --help
man git-<verb>

git add -h => more concise “help” output(with -h option)


*****************************************************************************

git version  : Print the version of the git

git config --global user.name "Abe Lincoln" : Add user to global

git config --global user.email "mrabe@git.training" : Add email to global

git config --global --list : List all global variables set

git clone github-https-url # paste in your GitHub HTTPS clone URL : Clone Project from Git Repository to Local

git status : List the unchecked and modified files.

git add start.txt : Add the file to staging area
git add ./git add s* : add all the files modified and untracked into staging area.

git commit -m "Adding start text file" : Commit the file to local repository

git push origin master : Pushes all the commited file to Remote respository to master branch.

git log : Displays the commit log history
fit log --filename : displays logs for filename 

git diff : displays the difefrences b/w working directory and staging area
git diff --staged : displays difference b/w staged area and last commit

git rm filename : remove filename from working area as well as staged area


git checkout --filename : copy/replace most recent filename from staging area to working directory.

git checkoout commit_id --filename : copies filename from that snapshot to working and staging area.

git reset HEAD filename : unstaged filename. Copy/replace most recent filename from commit/history to staging area.

.gitignore : put any file.directory ot be ignored by git. Git will not track any file/directory which is listed in this file.

=======================================================

git log --all --decorate --oneline --graph
alias graph="git log --all --decorate --oneline --graph" => creating alias for using it later

git branch SDN - Create branch
git branch auth

git branch - list all branches
 
git checkout SDN => checking out branch for working on it.

git add s1 ; git commit -m "SDN for s1" => add and commit in single line
 
git diff master..SDN => shows diff b/w master and SDN branch
 

git merge SDN  - Merges SDN into master(Fast Forward) . Need be in master branch.

git branch --merged : List merged branch 

git branch -d SDN : Deletes specified branch

git merge auth 


===============================

git remote -v : List remote repository path.

git fetch origin : Fetches the commit from remote to local

git merge origin/master : Merges the remote to local.

git pull => git fetch + git merge : Avoid this command, sometimes results in unexpected results

git remote add upstream 'location ' : upstream is alias name like origin.Adding remote with some alias . 

git remote remove upstream  : removing the remote 

================================================

 git config --list --show-origin : Shows all the setting 










